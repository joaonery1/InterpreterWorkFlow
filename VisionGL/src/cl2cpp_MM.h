
/*********************************************************************
***                                                                 ***
***  Source code generated by cl2cpp.pl                             ***
***                                                                 ***
***  Please do not edit                                             ***
***                                                                 ***
*********************************************************************/
#include "vglImage.h"

#include "vglShape.h"

#include "vglStrEl.h"

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyAlgDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyAlgErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyArithDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyArithErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyBoundDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyBoundErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyDaPDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z, float gama);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyDaPErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z, float gama);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyDrasticDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyDrasticErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyGeoDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyGeoErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyHamacherDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z, float gama);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyHamacherErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z, float gama);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyStdDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dFuzzyStdErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyAlgDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyAlgErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyArithDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyArithErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyBoundDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyBoundErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyDaPDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, float gama);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyDaPErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, float gama);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyDrasticDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyDrasticErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyGeoDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyGeoErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyHamacherDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, float gama);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyHamacherErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, float gama);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyStdDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClFuzzyStdErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

